% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probitAdj.r
\name{probitAdj}
\alias{probitAdj}
\title{The inverse of the [logitAdj()] function which is robust to cases that equal 0 or 1}
\usage{
probitAdj(x, epsilon = 0.01, base = 10, auto = FALSE)
}
\arguments{
\item{x}{Numeric list.}

\item{base}{Base of logarithm. Use \code{base=exp(1)} for base \code{e}.}

\item{auto}{If \code{TRUE} then if the attributes of \code{x} have slots named \code{epsilon} and \code{base} then use these instead of the user-supplied values of \code{epsilon} and \code{base}. If they do not appear as attributes of \code{x} but \code{auto} is \code{TRUE} then the function prints warnings and uses 0.01 and 10, respectively. If \code{FALSE} (default) then use the user-supplied values of \code{epsilon} and \code{base}.}
}
\value{
Numeric.
}
\description{
This function is the inverse of the \code{logitAdj()}. That function calculates the logit of values but is robust to cases where the operanc is 0 or 1. The adjusted probit is equal to \code{(base^x + epsilon * base^x - epsilon) / (base^x + 1)}.
}
\examples{
x <- seq(0, 1, by=0.1)
y <- logitAdj(x)
xx <- probitAdj(y, auto = TRUE)
}
\seealso{
\code{\link[omnibus]{logitAdj}}
}
